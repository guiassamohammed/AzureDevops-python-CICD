# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: build
  jobs:
  - job: build 
    pool:
      vmImage:  ubuntu-latest
    
    steps: 
    
    - task: UsePythonVersion@0
      displayName: python version
      inputs:
         versionSpec: '3.x'
         addToPath: true
         architecture: 'x64'

      
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(System.DefaultWorkingDirectory)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: archive the build
      inputs:
             rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
             includeRootFolder: true
             archiveType: 'zip'
             archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
             replaceExistingArchive: true
            
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop
            
 
- stage: depoly
  dependsOn: build
  jobs:
  - job: deploy
    pool:
      vmImage:  ubuntu-latest
    
    steps:
      
    - task: DownloadBuildArtifacts@1
      inputs:
         buildType: 'current'
         downloadType: 'single'
         artifactName: 'drop'
         downloadPath: '$(Pipeline.Workspace)'
        
    - task: UsePythonVersion@0
      displayName: python version
      inputs:
           versionSpec: '3.x'
           addToPath: true
           architecture: 'x64'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'MOGUIA (0140fa3e-3836-4df1-ad41-12987b3c3243)'
        appType: 'webAppLinux'
        WebAppName: 'python125'
        packageForLinux: $(Pipeline.Workspace)/$(Build.BuildId).zip
